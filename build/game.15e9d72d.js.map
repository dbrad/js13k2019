{"version":3,"sources":["../ts/game.ts"],"names":[],"mappings":"AAAA,MAAM,CAAC,gBAAP,CAAwB,MAAxB,EAAgC,MAAW;AACzC,MAAI,IAAI,GAAW,CAAnB;;AACA,WAAS,IAAT,CAAc,GAAd,EAAyB;AACvB,UAAM,KAAK,GAAW,GAAG,GAAG,IAA5B;AACA,IAAA,IAAI,GAAG,GAAP;AACA,IAAA,qBAAqB,CAAC,IAAD,CAArB;AACD;;AAED,QAAM,KAAK,GAAmB,QAAQ,CAAC,aAAT,CAAuB,QAAvB,CAA9B;AACA,QAAM,MAAM,GAAsB,QAAQ,CAAC,aAAT,CAAuB,QAAvB,CAAlC;AAEA,EAAA,MAAM,CAAC,KAAP,GAAe,GAAf;AACA,EAAA,MAAM,CAAC,MAAP,GAAgB,GAAhB;AAEA,EAAA,MAAM,CAAC,gBAAP,CACE,QADF,EAEE,MAAW;AACT,UAAM,MAAM,GAAW,MAAM,CAAC,UAAP,GAAoB,MAAM,CAAC,KAAlD;AACA,UAAM,MAAM,GAAW,MAAM,CAAC,WAAP,GAAqB,MAAM,CAAC,MAAnD;AACA,QAAI,UAAU,GAAW,IAAI,CAAC,GAAL,CAAS,MAAT,EAAiB,MAAjB,IAA2B,CAApD;AACA,IAAA,UAAU,GAAG,UAAU,IAAI,CAAd,GAAkB,CAAlB,GAAsB,UAAnC;AACA,UAAM,IAAI,GAAa,CAAC,MAAM,CAAC,KAAP,GAAe,UAAhB,EAA4B,MAAM,CAAC,MAAP,GAAgB,UAA5C,CAAvB;AACA,UAAM,MAAM,GAAa,CAAC,CAAC,MAAM,CAAC,UAAP,GAAoB,IAAI,CAAC,CAAD,CAAzB,IAAgC,CAAjC,EAAoC,CAAC,MAAM,CAAC,WAAP,GAAqB,IAAI,CAAC,CAAD,CAA1B,IAAiC,CAArE,CAAzB;AACA,UAAM,IAAI,GAAW,eAAe,MAAM,CAAC,CAAD,CAArB,GAA2B,MAA3B,GAAoC,MAAM,CAAC,CAAD,CAA1C,GAAgD,YAAhD,GAA+D,UAA/D,GAA4E,GAAjG;AACA,IAAA,KAAK,CAAC,KAAN,CAAY,SAAZ,GAAwB,IAAxB;AACA,IAAA,KAAK,CAAC,KAAN,CAAY,eAAZ,GAA8B,IAA9B;AACD,GAZH;AAeA,EAAA,qBAAqB,CAAC,IAAD,CAArB;AACA,EAAA,MAAM,CAAC,aAAP,CAAqB,IAAI,KAAJ,CAAU,QAAV,CAArB;AACD,CA/BD","file":"game.15e9d72d.js","sourceRoot":"..\\src\\html","sourcesContent":["window.addEventListener(\"load\", (): void => {\r\n  let then: number = 0;\r\n  function tick(now: number): void {\r\n    const delta: number = now - then;\r\n    then = now;\r\n    requestAnimationFrame(tick);\r\n  }\r\n\r\n  const stage: HTMLDivElement = document.querySelector(\"#stage\");\r\n  const canvas: HTMLCanvasElement = document.querySelector(\"canvas\");\r\n\r\n  canvas.width = 640;\r\n  canvas.height = 480;\r\n\r\n  window.addEventListener(\r\n    \"resize\",\r\n    (): void => {\r\n      const scaleX: number = window.innerWidth / canvas.width;\r\n      const scaleY: number = window.innerHeight / canvas.height;\r\n      let scaleToFit: number = Math.min(scaleX, scaleY) | 0;\r\n      scaleToFit = scaleToFit <= 0 ? 1 : scaleToFit;\r\n      const size: number[] = [canvas.width * scaleToFit, canvas.height * scaleToFit];\r\n      const offset: number[] = [(window.innerWidth - size[0]) / 2, (window.innerHeight - size[1]) / 2];\r\n      const rule: string = \"translate(\" + offset[0] + \"px, \" + offset[1] + \"px) scale(\" + scaleToFit + \")\";\r\n      stage.style.transform = rule;\r\n      stage.style.webkitTransform = rule;\r\n    }\r\n  );\r\n\r\n  requestAnimationFrame(tick);\r\n  window.dispatchEvent(new Event(\"resize\"));\r\n});\r\n"]}